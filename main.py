import discord
import asyncio
import random
import yt_dlp
from discord.ext import commands
from discord.ui import Button, View
from collections import deque
import os
from dotenv import load_dotenv

# ‡πÇ‡∏´‡∏•‡∏î environment variables
load_dotenv()
TOKEN = os.getenv("DISCORD_TOKEN")

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ TOKEN ‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if TOKEN is None:
    print("Error: DISCORD_TOKEN is not set in .env")
    exit(1)

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î intents
intents = discord.Intents.default()
intents.members = True
intents.message_content = True

# ‡∏™‡∏£‡πâ‡∏≤‡∏á bot
bot = commands.Bot(command_prefix='.', intents=intents)

class MusicControlView(View):
    def __init__(self, ctx):
        super().__init__(timeout=None)
        self.ctx = ctx

    @discord.ui.button(label="‚è∏Ô∏è ‡∏´‡∏¢‡∏∏‡∏î‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß", style=discord.ButtonStyle.secondary)
    async def pause_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.defer()
        await pause(self.ctx)

    @discord.ui.button(label="‚ñ∂Ô∏è ‡πÄ‡∏•‡πà‡∏ô‡∏ï‡πà‡∏≠", style=discord.ButtonStyle.success)
    async def resume_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.defer()
        await resume(self.ctx)

    @discord.ui.button(label="‚è≠Ô∏è ‡πÄ‡∏û‡∏•‡∏á‡∏ñ‡∏±‡∏î‡πÑ‡∏õ", style=discord.ButtonStyle.primary)
    async def next_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.defer()
        await next_song(self.ctx)

    @discord.ui.button(label="üíΩ ‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏û‡∏•‡∏á", style=discord.ButtonStyle.secondary)
    async def queue_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.defer()
        await show_queue(self.ctx)

    @discord.ui.button(label="‚ùå ‡∏õ‡∏¥‡∏î‡πÄ‡∏û‡∏•‡∏á", style=discord.ButtonStyle.danger)
    async def stop_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.defer()
        await stop(self.ctx)

    @discord.ui.button(label="üëã ‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ", style=discord.ButtonStyle.danger)
    async def leave_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.defer()
        await leave(self.ctx)

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏û‡∏•‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
music_queues = {}

@bot.event
async def on_ready():
    print(f"Bot is online as {bot.user}")

def get_youtube_info(url):
    ydl_opts = {
        'format': 'bestaudio/best',
        'noplaylist': True,
        'quiet': True
    }
    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        info_dict = ydl.extract_info(url, download=False)
        return info_dict

async def play_next(ctx):
    if ctx.guild.id in music_queues and music_queues[ctx.guild.id]:
        next_song = music_queues[ctx.guild.id].popleft()
        await play_song(ctx, next_song['url'])
    else:
        await ctx.send("‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏û‡∏•‡∏á‡πÉ‡∏ô‡∏Ñ‡∏¥‡∏ß‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞")

async def play_song(ctx, url):
    voice_client = ctx.voice_client

    youtube_info = get_youtube_info(url)
    youtube_url = youtube_info['url']
    title = youtube_info['title']

    ffmpeg_options = {
        'before_options': '-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5',
        'options': '-vn'
    }

    if voice_client.is_playing():
        voice_client.stop()

    voice_client.play(discord.FFmpegPCMAudio(youtube_url, **ffmpeg_options), after=lambda e: asyncio.run_coroutine_threadsafe(play_next(ctx), bot.loop))

    embed = discord.Embed(title="‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á", description=title, color=discord.Color.blue())
    embed.add_field(name="URL", value=url)
    
    view = MusicControlView(ctx)
    await ctx.send(embed=embed, view=view)

@bot.command(name='‡πÄ‡∏•‡πà‡∏ô')
async def play(ctx, url: str):
    if not ctx.author.voice:
        await ctx.send("‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ")
        return
    
    channel = ctx.author.voice.channel
    if ctx.voice_client is None:
        await channel.connect()
    elif ctx.voice_client.channel != channel:
        await ctx.voice_client.move_to(channel)
    
    if ctx.guild.id not in music_queues:
        music_queues[ctx.guild.id] = deque()

    youtube_info = get_youtube_info(url)
    title = youtube_info['title']

    if ctx.voice_client.is_playing():
        music_queues[ctx.guild.id].append({'url': url, 'title': title})
        await ctx.send(f"‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏•‡∏á '{title}' ‡∏•‡∏á‡πÉ‡∏ô‡∏Ñ‡∏¥‡∏ß‡πÅ‡∏•‡πâ‡∏ß")
    else:
        await play_song(ctx, url)

@bot.command(name='‡∏ï‡πà‡∏≠‡πÑ‡∏õ')
async def next_song(ctx):
    if ctx.voice_client and ctx.voice_client.is_playing():
        ctx.voice_client.stop()
    else:
        await ctx.send("‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Ñ‡πà‡∏∞")

@bot.command(name='‡∏Ñ‡∏¥‡∏ß')
async def show_queue(ctx):
    if ctx.guild.id in music_queues and music_queues[ctx.guild.id]:
        queue_list = "\n".join([f"{i+1}. {song['title']}" for i, song in enumerate(music_queues[ctx.guild.id])])
        embed = discord.Embed(title="‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏û‡∏•‡∏á", description=queue_list, color=discord.Color.green())
        await ctx.send(embed=embed)
    else:
        await ctx.send("‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏û‡∏•‡∏á‡πÉ‡∏ô‡∏Ñ‡∏¥‡∏ß‡∏Ñ‡πà‡∏∞")

@bot.command(name='‡∏õ‡∏¥‡∏î‡πÄ‡∏û‡∏•‡∏á')
async def stop(ctx):
    if ctx.voice_client:
        ctx.voice_client.stop()
        if ctx.guild.id in music_queues:
            music_queues[ctx.guild.id].clear()
        await ctx.send("‡πÅ‡∏Ñ‡∏ó‡πÄ‡∏ó‡∏≠‡∏£‡∏µ‡∏ô‡∏õ‡∏¥‡∏î‡πÄ‡∏û‡∏•‡∏á‡πÅ‡∏•‡∏∞‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡∏¥‡∏ß‡πÅ‡∏•‡πâ‡∏ß")

@bot.command(name='‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ')
async def leave(ctx):
    if ctx.voice_client:
        await ctx.voice_client.disconnect()
        if ctx.guild.id in music_queues:
            music_queues[ctx.guild.id].clear()
        await ctx.send("‡πÅ‡∏Ñ‡∏ó‡πÄ‡∏ó‡∏≠‡∏£‡∏µ‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡πâ‡∏ß üò¢")

@bot.command(name='‡∏´‡∏¢‡∏∏‡∏î')
async def pause(ctx):
    if ctx.voice_client and ctx.voice_client.is_playing():
        ctx.voice_client.pause()
        await ctx.send('‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏ï‡πà‡∏≠ ‡πÉ‡∏´‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á "‡πÄ‡∏•‡πà‡∏ô‡∏ï‡πà‡∏≠"')

@bot.command(name='‡πÄ‡∏•‡πà‡∏ô‡∏ï‡πà‡∏≠')
async def resume(ctx):
    if ctx.voice_client and ctx.voice_client.is_paused():
        ctx.voice_client.resume()
        await ctx.send("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏ï‡πà‡∏≠")
                
# BOT EVENTS
@bot.event
async def on_message(message):
    # ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏ó‡πÄ‡∏≠‡∏á‡∏™‡πà‡∏á
    if message.author == bot.user:
        return

    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° debug
    print(f"Received message: {message.content} from {message.author}")

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ '‡πÄ‡∏£‡∏µ‡∏¢‡∏Å' ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏ó‡πá‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    if '‡πÄ‡∏£‡∏µ‡∏¢‡∏Å' in message.content and message.mentions:
        print(f"Message contains '‡πÄ‡∏£‡∏µ‡∏¢‡∏Å' and mentions: {message.mentions}")

        for user in message.mentions:
            try:
                dm_channel = await user.create_dm()
                await dm_channel.send(
                    f"‡∏Ñ‡∏∏‡∏ì {user.mention} ‡∏ñ‡∏π‡∏Å‡∏ï‡∏≤‡∏°‡πÉ‡∏´‡πâ‡∏°‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤ üí¨ ‡πÇ‡∏î‡∏¢ {message.author.mention}"
                )
                await message.channel.send(f"‡πÅ‡∏Ñ‡∏ó‡πÄ‡∏ó‡∏≠‡∏£‡∏µ‡∏ô‡πÑ‡∏õ‡∏ï‡∏≤‡∏° {user.mention} ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞")
            except discord.Forbidden:
                await message.channel.send(f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á DM ‡πÑ‡∏õ‡∏¢‡∏±‡∏á {user.mention}")
                print(f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á DM ‡πÑ‡∏õ‡∏¢‡∏±‡∏á {user.mention}")
            except Exception as e:
                await message.channel.send(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
                print(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

    await bot.process_commands(message)


@bot.event
async def on_message(message):
    if message.author == bot.user:
        return
    trigger_words = ['‡∏¢‡∏¥‡∏á‡∏°‡∏±‡∏ô', '‡∏¢‡∏¥‡∏á‡∏°‡∏±‡∏ô‡∏™‡∏¥', '‡πÅ‡∏Ñ‡∏ó‡πÄ‡∏ó‡∏≠‡∏£‡∏µ‡∏ô‡∏¢‡∏¥‡∏á‡∏°‡∏±‡∏ô', '‡πÅ‡∏Ñ‡∏ó‡πÄ‡∏ó‡∏≠‡∏£‡∏µ‡∏ô‡∏¢‡∏¥‡∏á', '‡∏¢‡∏¥‡∏á‡∏°‡∏±‡∏ô‡∏™‡∏¥‡πÅ‡∏Ñ‡∏ó‡πÄ‡∏ó‡∏≠‡∏£‡∏µ‡∏ô', '‡πÅ‡∏Ñ‡∏ó‡∏¢‡∏¥‡∏á']
    if any(word in message.content for word in trigger_words):
        if isinstance(message.channel, discord.TextChannel):
            try:
                mention = message.mentions[0]
            except IndexError:
                await message.channel.send("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏Ñ‡πà‡∏∞")
                return
            if mention and isinstance(mention, discord.Member):
                if message.author.guild_permissions.administrator or message.author.top_role > mention.top_role:
                    if mention.voice and mention.voice.channel:
                        await mention.edit(mute=True)
                        embed = discord.Embed(
                            description=f"‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏∞ {mention.mention} ‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î‡πÑ‡∏°‡∏Ñ‡πå üíÄ",
                            color=discord.Color.dark_grey()
                        )
                        embed.set_image(url="https://i.makeagif.com/media/6-19-2021/fWA1bv.gif")
                        await message.channel.send(embed=embed)
                        await asyncio.sleep(30)
                        await mention.edit(mute=False)
                        await message.channel.send(f"{mention.mention} ‡∏ü‡∏∑‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß")
                    else:
                        await message.channel.send("‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏ñ‡∏ß‡∏ô‡∏µ‡πâ‡∏Ñ‡πà‡∏∞")
                else:
                    if message.author.voice and message.author.voice.channel:
                        await message.author.edit(mute=True)
                        embed = discord.Embed(
                            description=f"‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡πà‡∏∞ üòù {message.author.mention} ‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î‡πÑ‡∏°‡∏Ñ‡πå‡πÅ‡∏ó‡∏ô üíÄ",
                            color=discord.Color.red()
                        )
                        await message.channel.send(embed=embed)
                        await asyncio.sleep(15)
                        await message.author.edit(mute=False)
                        await message.channel.send(f"{message.author.mention} ‡∏ü‡∏∑‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß")
                    else:
                        await message.channel.send("ü§î")
            else:
                await message.channel.send("‡∏â‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏Ñ‡πà‡∏∞")
    await bot.process_commands(message)

# WELCOME MESSAGE
@bot.event
async def on_member_join(member):
    channel = bot.get_channel(952617523847778394)
    if channel:
        embed = discord.Embed(
            title="\u200B\nüò§ **‡∏°‡∏∏‡πà ‡∏á ‡∏™‡∏π ‡∏î ‡∏î ‡∏° ‡∏Å ‡∏≤ ‡∏ß ‡πÅ ‡∏• ‡∏∞ ‡∏Ç ‡∏≠ ‡∏á ‡πÄ ‡∏´ ‡∏• ‡∏ß** üçª",
            description=f"‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö {member.mention} ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏Å‡∏¥‡∏•‡∏î‡πå‡∏ô‡∏±‡∏Å‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢!",
            color=discord.Color.blue()
        )
        embed.set_thumbnail(url=member.avatar.url)
        embed.add_field(
            name="\u200B\nüìÉ **‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô**",
            value="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡∏Å‡∏é‡πÅ‡∏•‡∏∞‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ï‡∏≤‡∏°‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢",
            inline=False
        )
        embed.add_field(
            name="\nüí¨ **‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤**",
            value="‡∏°‡∏≤‡∏û‡∏π‡∏î‡∏Ñ‡∏∏‡∏¢‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡∏Å‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÜ ‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡∏ï‡πà‡∏≤‡∏á‡πÜ!",
            inline=False
        )
        embed.set_footer(
            text="\nüéâ ‡πÄ‡∏£‡∏≤‡∏´‡∏ß‡∏±‡∏á‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏°‡∏µ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏î‡∏µ‡πÉ‡∏ô‡∏Å‡∏¥‡∏•‡∏î‡πå‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤! üéâ"
        )

        await channel.send(embed=embed)

@bot.event
async def on_member_remove(member):
    channel = bot.get_channel(952617523847778394)
    if channel:
        embed = discord.Embed(
            title="üëã üëã üëã üëã üëã üëã üëã",
            description=f"{member.name} ‡πÑ‡∏î‡πâ‡∏•‡∏≤‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏¥‡∏•‡∏î‡πå‡∏ô‡∏±‡∏Å‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢ {member.guild.name}!",
            color=discord.Color.red()
        )
        embed.set_thumbnail(url=member.avatar.url)
        await channel.send(embed=embed)

bot.run(TOKEN)
